/*
public, private, protected, constants, read-only fields, constructors, setters, getters, properties and more on static
*/


// using directives, Libraries containing functions and objects
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
// for big numbers
using System.Numerics;
// for string builder
using System.Text;
// for culture specific formatting
using System.Globalization;


// Namespace to define globaly unique objects
namespace DerekBanasC_SharpTutorial
{
    // classes define the variables and methods used by objects
    // models real world objects by defining its attributes (fields)
    // and its capabilities (methods)
    // unlike struct, classes can inherit from classes and hace sub classes
    class Program
    {
        static void Main(string[] args)
        {
            Animal cat = new Animal();

            // Call the setter
            cat.SetName("Whiskers");

            // Set the property
            cat.Sound = "Meow";

            Console.WriteLine("The cat is named {0} and says {1}",
                cat.GetName(), cat.Sound);


            // Test auto generated getters and setters
            cat.Owner = "Derek";

            Console.WriteLine("{0} owner is {1}",
                cat.GetName(), cat.Owner);

            // Get the read-only id number
            Console.WriteLine("{0} shelter id is {1}",
                cat.GetName(), cat.idNum);

            // another animal to test NumOfAnimals
            Animal fox = new Animal("Foxy", "Arg");

            // Test static property
            Console.WriteLine("# of Animals : {0}",
                Animal.NumOfAnimals);


            Console.ReadLine();

        }

    }

}
