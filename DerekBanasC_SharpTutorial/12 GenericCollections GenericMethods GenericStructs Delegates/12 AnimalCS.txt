/*
Well come to part 12 of my C# tutorial. This tutorial will focus on Generic Collections, Generic Methods, Generic Structs, and more on Delegates. 
We are getting near the end and so we are covering some of the really cool things C# can do.
*/


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DerekBanasC_SharpTutorial
{
    // If this class was sealed you couldn't inherit 
    // from it:
    // sealed class Animal
    class Animal
    {
        public string Name { get; set; }

        public Animal(string name = "No Name")
        {
            Name = name;
        }

        // Anytime you need many overloaded 
        // methods that differ only by their
        // parameters a generic is normally
        // the solution, this will take any data type
        // of one type for each num1, or num2, independently for each group
        public static void GetSum<T>(ref T num1, ref T num2)
        {
            double dblX = Convert.ToDouble(num1);
            double dblY = Convert.ToDouble(num2);

            // Do the math here
            Console.WriteLine($"{dblX} + {dblY} = {dblX + dblY}");
        }
    }
}


