/*
In this part of my C# tutorial series we will make a fun little game. I’m going to show how to create 2 warriors that will fight to the death in a simulated battle. 
More complex video games follow many of the techniques we cover in this video. It also will show how awesome object oriented programming is in that it gives you the 
ability to model just about any real world object, or interaction.
*/



// using directives, Libraries containing functions and objects
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
// for big numbers
using System.Numerics;
// for string builder
using System.Text;
// for culture specific formatting
using System.Globalization;


// Namespace to define globaly unique objects
namespace DerekBanasC_SharpTutorial
{
    // classes define the variables and methods used by objects
    // models real world objects by defining its attributes (fields)
    // and its capabilities (methods)
    // unlike struct, classes can inherit from classes and hace sub classes
    class Program
    {
        /*
       Bob Attacks Maximus and Deals 74 Damage
       Maximus Has 69 Health

       Maximus Attacks Bob and Deals 6 Damage
       Bob Has 6 Health

       Bob Attacks Maximus and Deals 48 Damage
       Maximus Has 21 Health

       Maximus Attacks Bob and Deals 48 Damage
       Bob Has -42 Health

       Bob has Died and Maximus is Victorious

       Game Over
       */
        static void Main(string[] args)
        {
            // create names for Wariors, from Warrior.cs class
            // each warrior passes Name, (starting amount of) Health, AtkMax, BlockMax
            Warrior maximus = new Warrior("Maximus", 1000, 120, 40);
            Warrior bob = new Warrior("Bob", 1000, 120, 40);

            // Passes warrior names objects, to Battle class, using StartFight method, to initiate the fight
            Battle.StartFight(maximus, bob);

            Console.ReadLine();
        }

    }

}
